project_name: "KGAS Deep Documentation Review"
project_path: "../"
output_format: "markdown"
output_file: "deep-review-analysis.md"
keep_repomix: false

include_patterns:
  # === MAIN PROJECT DOCUMENTATION ===
  - "CLAUDE.md"
  - "README.md"
  
  # === CORE PLANNING & ROADMAP (EXPANDED) ===
  - "docs/planning/roadmap.md"
  - "docs/planning/POST_MVP_ROADMAP.md"
  - "docs/planning/implementation-plan.md"
  - "docs/planning/implementation-requirements.md"
  - "docs/planning/CLAUDE.md"
  - "docs/planning/planned-features.md"
  - "docs/planning/multi-document-architecture.md"
  - "docs/planning/theory-integration-status.md"
  
  # === ARCHITECTURE DOCUMENTATION (EXPANDED) ===
  - "docs/architecture/KGAS_ARCHITECTURE_V3.md"
  - "docs/architecture/project-structure.md"
  - "docs/architecture/LIMITATIONS.md"
  - "docs/architecture/concepts/kgas-evergreen-documentation.md"
  - "docs/architecture/concepts/theoretical-framework.md"
  - "docs/architecture/concepts/design-patterns.md"
  - "docs/architecture/concepts/master-concept-library.md"
  - "docs/architecture/specifications/SPECIFICATIONS.md"
  - "docs/architecture/specifications/capability-registry.md"
  - "docs/architecture/specifications/compatibility-matrix.md"
  - "docs/architecture/specifications/PROVENANCE.md"
  - "docs/architecture/specifications/consistency-framework.md"
  - "docs/architecture/data/MODELS.md"
  - "docs/architecture/data/orm-methodology.md"
  - "docs/architecture/data/theory-meta-schema.md"
  - "docs/architecture/systems/contract-system.md"
  - "docs/architecture/systems/plugin-system.md"
  - "docs/architecture/systems/theory-repository-abstraction.md"
  - "docs/architecture/adrs/ADR-001-Phase-Interface-Design.md"
  - "docs/architecture/adrs/ADR-002-Pipeline-Orchestrator-Architecture.md"
  - "docs/architecture/adrs/ADR-003-Vector-Store-Consolidation.md"
  
  # === GETTING STARTED & USER GUIDES ===
  - "docs/getting-started/quick-start.md"
  - "docs/getting-started/usage-guide.md"
  - "docs/getting-started/mcp-setup-guide.md"
  - "docs/getting-started/neo4j-setup-guide.md"
  - "docs/getting-started/extraction-explained.md"
  - "docs/getting-started/neo4j-browser-guide.md"
  - "docs/getting-started/testing-ui.md"
  - "docs/getting-started/ui-readme.md"
  
  # === DEVELOPMENT DOCUMENTATION ===
  - "docs/development/DEPLOYMENT.md"
  - "docs/development/guides/DEVELOPMENT_GUIDE.md"
  - "docs/development/guides/REPRODUCIBILITY.md"
  - "docs/development/contributing/CONTRIBUTING.md"
  - "docs/development/contributing/CONTRIBUTING_DOCS.md"
  - "docs/development/standards/ERROR_HANDLING_BEST_PRACTICES.md"
  - "docs/development/standards/LOGGING_GUIDE.md"
  - "docs/development/standards/DOCUMENTATION_HONESTY_UPDATES.md"
  - "docs/development/standards/NO_MOCKS_POLICY_VIOLATION.md"
  - "docs/development/testing/VERIFICATION.md"
  - "docs/development/testing/VERIFICATION_COMMANDS.md"
  - "docs/development/testing/EVALUATION.md"
  
  # === OPERATIONS DOCUMENTATION ===
  - "docs/operations/OPERATIONS.md"
  - "docs/operations/HARDWARE.md"
  - "docs/operations/governance/SECURITY.md"
  - "docs/operations/governance/POLICY.md"
  - "docs/operations/governance/ETHICS.md"
  - "docs/operations/governance/licenses-third-party.md"
  - "docs/operations/reports/tool-audit-report.md"
  - "docs/operations/reports/tool-status-report.md"
  - "docs/operations/reports/database-verification-report.md"
  
  # === API DOCUMENTATION ===
  - "docs/api/API_REFERENCE.md"
  - "docs/api/API_STANDARDIZATION_FRAMEWORK.md"
  
  # === STATUS & ORGANIZATION SUMMARIES ===
  - "docs/FINAL_ORGANIZATION_SUMMARY.md"
  - "docs/REORGANIZATION_AUDIT_REPORT.md"
  - "docs/ARCHITECTURE_CLEANUP_SUMMARY.md"
  - "docs/planning/reports/implementation-complete-summary.md"
  - "docs/planning/reports/phase2-academic-compliance.md"
  - "docs/planning/reports/phase2-api-status-update.md"
  - "docs/planning/reports/documentation-consolidation-needed.md"
  - "docs/planning/reports/directory-examination-report.md"
  
  # === PHASE IMPLEMENTATION PLANS ===
  - "docs/planning/phases/phase-1-implementation-plan.md"
  - "docs/planning/phases/phase-2-implementation-plan.md"
  - "docs/planning/phases/phase-3-implementation-plan.md"
  - "docs/planning/phases/phase-4-implementation-plan.md"
  
  # === ANALYSIS DOCUMENTS ===
  - "docs/planning/analysis/abstractions.md"
  - "docs/planning/analysis/concurrency-anyio-vs-asyncio.md"
  - "docs/planning/analysis/dependencies.md"
  - "docs/planning/analysis/env-setup.md"
  - "docs/planning/analysis/input-validation.md"
  - "docs/planning/analysis/monitoring-observability.md"
  - "docs/planning/analysis/roadmap.md"
  
  # === STRATEGY DOCUMENTS ===
  - "docs/planning/strategy/horizontal-first-strategy.md"
  - "docs/planning/strategy/vision-alignment-proposal.md"
  
  # === INITIATIVES ===
  - "docs/planning/initiatives/identity/identity-service-clarification.md"
  - "docs/planning/initiatives/identity/identity-service-migration-plan.md"
  - "docs/planning/initiatives/performance/future-possible-performance-optimizations.md"
  - "docs/planning/initiatives/performance/pagerank-optimization-plan.md"
  - "docs/planning/initiatives/tooling/tool-count-clarification.md"
  - "docs/planning/initiatives/tooling/tool-count-methodology.md"
  - "docs/planning/initiatives/tooling/tool-implementation-status.md"

ignore_patterns:
  - "**/archive/**"
  - "**/*.log"
  - "**/test_results/**"
  - "**/verification/**"
  - "**/old-**"
  - "**/duplicates/**"
  - "**/src/**/CLAUDE.md"  # Exclude implementation-specific CLAUDE.md files
  - "**/.pytest_cache/**"
  - "**/config/CLAUDE.md"
  - "**/docker/CLAUDE.md"
  - "**/scripts/CLAUDE.md"

custom_prompt: |
  You are conducting an exhaustive deep documentation review for the KGAS (Knowledge Graph AI System) project. This is a follow-up to previous consistency fixes, so you need to identify ANY remaining problems, inconsistencies, or quality issues.

  ## CONTEXT: RECENT FIXES APPLIED
  - KGAS has been established as an "academic research tool for local, single-node research"
  - All "production-ready" claims have been removed in favor of "research-capable" terminology
  - Phase 4 status has been marked as "UNCERTAIN" where conflicts existed
  - roadmap.md is the single source of truth for status, KGAS_ARCHITECTURE_V3.md for goals

  ## DEEP REVIEW FOCUS AREAS

  ### 1. TERMINOLOGY & LANGUAGE CONSISTENCY
  - **Production terminology**: Look for any remaining "production", "enterprise", "scalability" language that contradicts academic focus
  - **Status terminology**: Check for inconsistent use of "complete", "implemented", "ready", "validated" across documents
  - **Academic language**: Ensure consistent use of "research", "academic", "experimental", "development-grade" terminology
  - **Technical accuracy**: Verify technical claims match the academic research tool scope

  ### 2. CROSS-DOCUMENT REFERENCE INTEGRITY
  - **Broken links**: Find any references to moved, renamed, or non-existent files
  - **Outdated references**: Check for references to old document names, deprecated files, or wrong versions
  - **Navigation consistency**: Ensure consistent document linking and navigation patterns
  - **Authority references**: Verify all documents properly reference the correct SSoT documents

  ### 3. ARCHITECTURAL ALIGNMENT VERIFICATION
  - **System scope consistency**: Ensure all documents describe the same single-node academic research system
  - **Component descriptions**: Check that component descriptions are consistent across architecture, planning, and user docs
  - **Technology stack**: Verify consistent description of technologies (Neo4j, Python, etc.) and their purposes
  - **Data flow consistency**: Ensure data processing descriptions align across documents

  ### 4. STATUS & PROGRESS CONSISTENCY
  - **Phase descriptions**: Verify phase numbering, naming, and scope are consistent across all documents
  - **Implementation claims**: Check that any "implemented" or "complete" claims are consistent and verifiable
  - **Progress tracking**: Ensure progress percentages, tool counts, and completion metrics are consistent
  - **Validation claims**: Verify validation and testing claims are accurate and consistent

  ### 5. DOCUMENTATION QUALITY ISSUES
  - **Placeholder content**: Find any TODOs, placeholder text, template content, or unfilled sections
  - **Broken formatting**: Identify markdown formatting issues, broken tables, malformed lists
  - **Missing information**: Identify critical gaps where information should exist but doesn't
  - **Redundant content**: Find duplicate information that creates maintenance burden

  ### 6. USER EXPERIENCE ISSUES
  - **Setup instructions**: Check that installation and setup instructions are complete and consistent
  - **Navigation problems**: Identify areas where users might get lost or confused
  - **Conflicting guidance**: Find places where different docs give different instructions for the same task
  - **Missing prerequisites**: Identify unstated assumptions or missing prerequisite information

  ### 7. VERSION & DATE CONSISTENCY
  - **Version numbers**: Check for consistent version numbering across documents
  - **Date accuracy**: Verify dates are accurate and consistent (no future dates, logical progression)
  - **Update tracking**: Ensure documents track their update history consistently
  - **Deprecation status**: Check that deprecated content is properly marked or removed

  ### 8. VALIDATION & EVIDENCE CLAIMS
  - **Testing claims**: Verify any testing or validation claims are accurate and consistent
  - **Evidence references**: Check that claimed evidence (logs, reports, validations) actually exists
  - **Metrics consistency**: Ensure any numbers, percentages, or metrics are consistent across documents
  - **External validation**: Verify any claims about external validation or third-party verification

  ## ANALYSIS REQUIREMENTS

  ### For EVERY issue found:
  1. **Cite specific files and line numbers** where problems occur
  2. **Quote the problematic content** directly
  3. **Explain the specific problem** and why it's an issue
  4. **Assess the impact** - user confusion, development problems, maintenance issues
  5. **Recommend specific fixes** - exact changes needed

  ### Priority classification:
  - **CRITICAL**: Completely blocks understanding or creates false information
  - **HIGH**: Creates significant confusion or workflow problems
  - **MEDIUM**: Creates minor confusion or maintenance burden
  - **LOW**: Cosmetic or style issues

  ## SUCCESS CRITERIA
  This deep review succeeds if it identifies:
  - All remaining terminology inconsistencies
  - All broken or outdated references
  - All remaining status/progress conflicts
  - All documentation quality issues
  - All user experience problems
  - All validation/evidence issues

  Be extremely thorough and detail-oriented. The goal is to achieve complete documentation integrity with zero remaining inconsistencies or quality issues.