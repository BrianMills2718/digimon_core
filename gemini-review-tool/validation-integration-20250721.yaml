project_name: "Deep Integration Framework - Implementation Validation"
output_file: "deep_integration_validation.md"

include_patterns:
  - "stress_test_2025.07211755/deep_integration_scenario.py"

ignore_patterns:
  - "**/*.log"
  - "**/test_*.py"
  - "**/*.pyc"
  - "logs/**"

custom_prompt: |
  Please validate the following specific implementation claims by examining the code in deep_integration_scenario.py:

  ## VALIDATION CLAIMS:

  ### CLAIM 1: Dynamic Meta-Schema Execution Engine (Lines 52-124)
  **Requirement**: MetaSchemaExecutionEngine.execute_validation_rule() dynamically parses and executes conditional logic from JSON
  **Look for**: _evaluate_condition() method that can parse "if X then Y" syntax and execute it

  ### CLAIM 2: MCL Concept Mediation (Lines 127-237)
  **Requirement**: MCLConceptMediator.resolve_indigenous_term() maps terms to canonical concepts with confidence scoring
  **Look for**: concept_mappings dictionary and term resolution logic

  ### CLAIM 3: Cross-Modal Preservation (Lines 240-471)
  **Requirement**: CrossModalSemanticValidator implements complete graph→table→vector→graph round-trip
  **Look for**: All 4 transformation methods: _graph_to_table(), _table_to_vector(), _vector_to_table(), _table_to_graph()

  ### CLAIM 4: Tool Contract Validation (Lines 475-596)
  **Requirement**: ToolContractValidator.validate_io_compatibility() checks type compatibility with inheritance
  **Look for**: _check_type_compatibility() method with inheritance checking logic

  ### CLAIM 5: Statistical Robustness (Lines 600-735)
  **Requirement**: StatisticalIntegrationValidator computes confidence intervals and tests noise robustness
  **Look for**: compute_confidence_intervals() and test_robustness_under_noise() methods with actual math

  ## VERIFICATION REQUIREMENTS:
  For each claim, provide:
  - ✅ **FULLY RESOLVED** - Implementation present, complete, functional
  - ⚠️ **PARTIALLY RESOLVED** - Implementation present but incomplete
  - ❌ **NOT RESOLVED** - Implementation missing or non-functional

  Please examine the code and provide specific line number references for your findings.