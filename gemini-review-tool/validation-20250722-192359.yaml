# Include only the implemented tool files and their tests
include_patterns:
  - "src/tools/phase1/t08_xml_loader_unified.py"
  - "src/tools/phase1/t09_yaml_loader_unified.py" 
  - "src/tools/phase1/t10_excel_loader_unified.py"
  - "src/tools/phase1/t11_powerpoint_loader_unified.py"
  - "tests/unit/test_t08_xml_loader_unified.py"
  - "tests/unit/test_t09_yaml_loader_unified.py"
  - "tests/unit/test_t10_excel_loader_unified.py"
  - "tests/unit/test_t11_powerpoint_loader_unified.py"
  - "src/tools/base_tool.py"

# Custom validation prompt focused on specific claims
custom_prompt: |
  You are validating FIXES to specific implementation issues identified in a previous validation of a TDD tool rollout project.
  
  VALIDATION OBJECTIVE: Verify that all issues identified in the previous Gemini validation have been RESOLVED:
  
  PREVIOUS ISSUES IDENTIFIED:
  1. T11 PowerPoint Loader test suite was completely missing
  2. Error handling used message prefixes instead of formal programmatic error codes
  3. Coverage percentages were unverifiable from code alone
  
  FIXES IMPLEMENTED:
  1. Created comprehensive mock-free test suite for T11 PowerPoint Loader
  2. Added ToolErrorCode enum with formal error codes for programmatic handling
  3. Updated all tools to use formal error codes from the enum
  
  For each fix, examine the provided files and determine if the resolution is:
  - FULLY RESOLVED: Fix implemented completely and correctly
  - PARTIALLY RESOLVED: Fix implemented but incomplete or has minor issues
  - NOT RESOLVED: Fix not implemented or implementation is incorrect
  
  SPECIFIC VALIDATION CRITERIA:
  1. T11 test suite exists with comprehensive mock-free tests using real python-pptx processing
  2. ToolErrorCode enum exists with formal error codes for all tool error conditions
  3. All tools now use ToolErrorCode enum values instead of string literals
  4. Test coverage and methodology follow the same patterns as T08, T09, T10
  5. All existing functionality remains intact after fixes
  
  Provide specific line number references and concrete evidence for each fix.

# Claims to validate - FIXES IMPLEMENTED
claims_of_success: |
  FIX 1: T11 PowerPoint Loader now has comprehensive mock-free test suite (test_t11_powerpoint_loader_unified.py) with real python-pptx processing
  FIX 2: ToolErrorCode enum added to base_tool.py with formal error codes for programmatic handling
  FIX 3: All tools (T08, T09, T10, T11) now use ToolErrorCode enum values instead of string literals for error handling
  VALIDATION: T11 test suite follows the same mock-free patterns as T08, T09, T10 with real library usage and temporary file creation
  VALIDATION: All tools maintain existing functionality and ServiceManager integration after error code improvements
  VALIDATION: Error handling is now fully programmatic with formal enum-based error codes instead of string prefixes

# Ignore patterns - exclude everything not directly related to implementation claims  
ignore_patterns:
  - "*.md"
  - "*.log" 
  - "*.xml"
  - "archived/**"
  - "docs/**"
  - "data/**"
  - ".gemini-cache/**"
  - "gemini-review-tool/outputs/**"
  - "tests/integration/**"
  - "Evidence_*.md"