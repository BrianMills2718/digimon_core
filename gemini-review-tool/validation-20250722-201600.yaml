project_name: "T12 T13 Implementation Validation"

# Include only the files containing the claimed implementations
include_patterns:
  - "src/tools/phase1/t12_zip_loader_unified.py"
  - "src/tools/phase1/t13_web_scraper_unified.py"
  - "tests/unit/test_t12_zip_loader_unified.py"
  - "tests/unit/test_t13_web_scraper_unified.py"
  - "src/tools/base_tool.py"

# Clear validation objective with specific criteria for each claim
custom_prompt: |
  You are validating the COMPLETE implementation of T12 Zip Archive Loader and T13 Web Scraper tools following unified BaseTool interface and mock-free testing methodology.
  
  VALIDATION OBJECTIVE: Verify that ALL implementation claims are accurate and complete.
  
  For each claim below, examine the provided files and determine:
  - FULLY RESOLVED: Implementation present, complete, meets all stated requirements
  - PARTIALLY RESOLVED: Implementation present but incomplete or doesn't fully meet requirements  
  - NOT RESOLVED: Implementation missing or doesn't address the claimed issue
  
  CRITICAL REQUIREMENTS TO VERIFY:
  1. Each tool inherits from BaseTool and implements unified interface (execute, get_contract, validate_input, health_check, cleanup methods)
  2. Each tool has comprehensive mock-free test suite with real library usage (zipfile for T12, requests/BeautifulSoup for T13)
  3. Test suites use tempfile for real data creation and ServiceManager() for real service integration
  4. ToolErrorCode enum includes ZIP and HTTP/network error codes for both tools
  5. All tools use ToolErrorCode enum instead of string literals for error handling
  6. T12 uses real zipfile operations for archive processing and extraction
  7. T13 uses real HTTP requests with requests library and BeautifulSoup for HTML parsing
  8. All tests follow "_real" naming convention and contain zero mocking
  9. Performance tracking (execution_time, memory_used) is implemented via BaseTool
  10. Both tools achieve 80%+ test coverage with comprehensive test suites
  
  Provide specific line number references and concrete code evidence for each claim.

# Each claim mapped to specific file location and expected behavior
claims_of_success: |
  CLAIM 1: T12 Zip Archive Loader implements unified BaseTool interface with 80% coverage and zero mocking using real zipfile processing
  CLAIM 2: T13 Web Scraper implements unified BaseTool interface with 82% coverage and zero mocking using real requests+BeautifulSoup processing  
  CLAIM 3: Both tools follow established mock-free testing patterns with comprehensive test suites that use real libraries and temporary files
  CLAIM 4: Both tools integrate with ServiceManager for identity, provenance, and quality services via BaseTool inheritance
  CLAIM 5: ToolErrorCode enum provides formal error codes for ZIP operations (ZIP_CORRUPTED, ARCHIVE_EXTRACTION_FAILED) and network operations (CONNECTION_ERROR, CONNECTION_TIMEOUT, HTTP_ERROR)
  CLAIM 6: All tools use ToolErrorCode enum values for error handling instead of string literals
  CLAIM 7: All tools track performance metrics (execution_time, memory_used) via BaseTool _start_execution and _end_execution methods
  CLAIM 8: T12 processes real ZIP files with zipfile module and handles binary file detection, directory structures, and compression ratios
  CLAIM 9: T13 performs real web scraping with HTTP requests, HTML parsing, link extraction, and metadata extraction
  CLAIM 10: Both test suites achieve comprehensive coverage (T12: 18 tests passing, T13: 20 tests passing) with zero mocking verified

# Exclude everything not directly related to the implementation claims  
ignore_patterns:
  - "*.md"
  - "*.log" 
  - "*.xml"
  - "archived/**"
  - "docs/**"
  - "data/**"
  - ".gemini-cache/**"
  - "gemini-review-tool/outputs/**"
  - "tests/integration/**"
  - "Evidence_*.md"