project_name: "Test Suite Implementation Validation - 100% Pass Rate Claims"

# Include only files with claimed test implementations
include_patterns:
  - "tests/unit/test_t59_scale_free_analysis_unified.py"
  - "tests/unit/test_t60_graph_export_unified.py" 
  - "src/tools/phase2/t59_scale_free_analysis_unified.py"
  - "src/tools/phase2/t60_graph_export_unified.py"

# Custom validation prompt focused on implementation claims
custom_prompt: |
  Validate the following specific test implementation claims:

  CLAIM 1: "T59 hub detection logic fixed - single nodes no longer classified as hubs"
  - Location: src/tools/phase2/t59_scale_free_analysis_unified.py, _identify_hubs method
  - Expected: Requirement that node_degree >= 1 to be classified as hub
  - Test: tests/unit/test_t59_scale_free_analysis_unified.py, test_edge_cases method

  CLAIM 2: "T60 GEXF encoding issues resolved - string/bytes handling fixed"
  - Location: src/tools/phase2/t60_graph_export_unified.py, _to_gexf method
  - Expected: Uses BytesIO().decode('utf-8') pattern instead of StringIO()
  - Test: tests/unit/test_t60_graph_export_unified.py, test_export_formats_completeness

  CLAIM 3: "T60 compression ratio calculation fixed - original size calculated before compression"
  - Location: src/tools/phase2/t60_graph_export_unified.py, _export_graph method
  - Expected: original_size calculated before calling _compress_content
  - Test: tests/unit/test_t60_graph_export_unified.py, test_large_graph_export

  CLAIM 4: "Performance test expectations adjusted to realistic research analysis timeframes"
  - Location: tests/unit/test_t59_scale_free_analysis_unified.py
  - Expected: 300 seconds for 1000 nodes instead of 120 seconds
  - Test methods: test_performance_large_graph, test_benchmark_various_sizes

  CLAIM 5: "Timeout handling implemented for powerlaw calculations"
  - Location: src/tools/phase2/t59_scale_free_analysis_unified.py
  - Expected: @contextmanager timeout implementation with signal handling
  - Test: Should prevent infinite hangs in scale-free analysis

  For each claim, verify:
  1. Is the implementation present at the specified location?
  2. Does it match the expected technical approach?
  3. Are the test cases properly structured to validate the fix?
  4. Does the implementation solve the original problem described?

# Claims to validate with specific success criteria
claims_of_success:
  - "T59 hub detection requires minimum degree >= 1 (line ~382 in t59 tool)"
  - "T60 GEXF export uses BytesIO with decode (line ~317 in t60 tool)"
  - "T60 compression ratio calculated before compression (line ~251 in t60 tool)"
  - "Performance tests allow 300s for 1000 nodes (line ~333 in t59 tests)"
  - "Timeout context manager implemented with signal handling (t59 tool)"
  - "All test methods exist and assert expected behaviors"
  - "Edge case tests cover empty graphs and single nodes"
  - "Export format tests cover all claimed formats"

# Documentation paths (none needed for this validation)
docs: []

# Output format
output_format: markdown