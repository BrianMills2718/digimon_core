project_name: "T57 Path Analysis Implementation Claims Validation"

custom_prompt: |
  You are validating specific implementation claims for the T57 Path Analysis Tool.
  
  For each claim below, verify:
  1. **Implementation Present**: Does the method/feature exist where claimed?
  2. **Functionality Complete**: Is it fully implemented (not stub/placeholder)?
  3. **Requirements Met**: Does it satisfy the specific requirements mentioned?
  
  CLAIMS TO VALIDATE:
  
  **CLAIM 1**: "T57 implements advanced shortest path algorithms including Dijkstra, BFS, Bellman-Ford"
  - Verify: _compute_dijkstra_paths method uses nx.single_source_dijkstra
  - Verify: _compute_bfs_paths method uses nx.single_source_shortest_path  
  - Verify: _compute_bellman_ford_paths method uses nx.single_source_bellman_ford
  - Expected: Real NetworkX algorithms, no mocking
  
  **CLAIM 2**: "T57 implements all-pairs shortest path analysis with proper API handling"
  - Verify: _analyze_all_pairs_paths method exists
  - Verify: Correctly handles nx.all_pairs_dijkstra vs nx.all_pairs_shortest_path differences
  - Expected: Proper tuple unpacking for (lengths, paths) format
  
  **CLAIM 3**: "T57 implements flow analysis with NetworkX flow algorithms"
  - Verify: _analyze_flows method uses nx.maximum_flow and nx.minimum_cut
  - Verify: Proper capacity attribute handling for flow graphs
  - Expected: Real flow computation, not simulation
  
  **CLAIM 4**: "T57 implements reachability analysis with connectivity metrics"
  - Verify: _analyze_reachability method calculates reachability matrix
  - Verify: Computes connectivity ratio and component analysis
  - Expected: Real graph traversal algorithms
  
  **CLAIM 5**: "T57 has comprehensive test suite with ~28 tests and zero mocking"
  - Verify: Test file has approximately 28 test methods
  - Verify: Tests use real NetworkX graphs, not mocked objects
  - Expected: test_zero_mocking_validation method confirms no mocks
  
  **CLAIM 6**: "T57 follows BaseTool interface with required methods"
  - Verify: PathAnalysisTool inherits from BaseTool
  - Verify: Implements get_contract, health_check, validate_input methods
  - Expected: Complete interface compliance
  
  **CLAIM 7**: "T57 provides academic-ready output with confidence calculation"
  - Verify: _calculate_academic_confidence method exists
  - Verify: Result metadata includes academic_ready and publication_ready flags
  - Expected: Statistical significance scoring for research use
  
  For each claim, provide verdict with specific evidence:
  - ✅ **FULLY RESOLVED** - Implementation present, complete, meets requirements
  - ⚠️ **PARTIALLY RESOLVED** - Implementation present but incomplete
  - ❌ **NOT RESOLVED** - Implementation missing or inadequate
  
  Include specific line numbers and method names in your analysis.

include_patterns:
  - "src/tools/phase2/t57_path_analysis_unified.py"
  - "tests/unit/test_t57_path_analysis_unified.py"

ignore_patterns:
  - "*.md"
  - "Evidence_*"
  - "logs/*"
  - "*.log" 
  - "archived/*"
  - "docs/*"
  - "*.xml"
  - ".gemini-cache/*"
  - "__pycache__/*"
  - "*.pyc"