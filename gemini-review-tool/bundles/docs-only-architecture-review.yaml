# Gemini Review Configuration: Documentation-Only Architecture & Roadmap Critique
# Focus: Review architecture and roadmap decisions based solely on documentation

project_name: "KGAS Architecture & Roadmap Documentation Review"

# Include only documentation files - no source code
include_patterns:
  # Main documentation
  - "CLAUDE.md"
  - "docs/**/*.md"
  - "docs/**/*.yaml"
  
  # Architecture Decision Records
  - "docs/architecture/adrs/*.md"
  
  # Configuration understanding
  - "config/**/*.yaml"
  - "config/**/*.yml" 
  - "config/CLAUDE.md"
  - "config/environments/CLAUDE.md"
  - "config/monitoring/CLAUDE.md"
  
  # Deployment and infrastructure understanding
  - "k8s/*.yaml"
  - "k8s/CLAUDE.md"
  - "docker/*.yml"
  - "docker/CLAUDE.md"
  - ".github/**/*.yml"
  - ".github/CLAUDE.md"
  - ".github/workflows/CLAUDE.md"
  
  # Requirements for dependency understanding
  - "requirements/*.txt"
  - "requirements/*.in"
  - "requirements/README.md"

# Explicitly exclude all source code and implementation
ignore_patterns:
  - "src/**"
  - "tests/**"
  - "*.py"
  - "test_data/**"
  - "archive/**"
  - "archived/**"
  - "backups/**"
  - "logs/**"
  - "*.log"
  - "*.json"
  - "examples/**"
  - "tools/**"
  - "ui/**"
  - "*.tar.gz"
  - "__pycache__/**"
  - "*.pyc"
  - ".git/**"

# Custom prompt for architecture and roadmap review
custom_prompt: |
  You are conducting an expert architectural and roadmap review for KGAS (Knowledge Graph Analysis System), an academic research tool. You have been provided with ONLY the documentation - no source code.

  Based solely on the documentation provided, please provide a comprehensive critique focusing on:

  ## ARCHITECTURE REVIEW
  1. **System Coherence**: Does the overall architecture make sense as a unified system?
  2. **Academic Appropriateness**: Is this architecture suitable for academic research workflows?
  3. **Cross-Modal Vision**: Can the architecture realistically support graph↔table↔vector analysis?
  4. **Technical Soundness**: Are there obvious architectural flaws or bottlenecks?
  5. **Theory Integration**: How well does the LLM-ontology system fit with the overall design?

  ## ROADMAP ANALYSIS
  1. **Timeline Realism**: Is the 2-week MVRT (Minimum Viable Research Tool) timeline achievable?
  2. **Decision Quality**: Are the 5 roadmap decisions (LLM-ontology, tool strategy, testing, cross-modal UI, academic focus) well-reasoned?
  3. **Priority Logic**: Do the tool priorities and implementation phases make sense?
  4. **Risk Assessment**: Are the identified risks adequate and are mitigations realistic?
  5. **Academic Value**: Does the roadmap appropriately prioritize research value?

  ## INTEGRATION CONSISTENCY
  1. **ADR Alignment**: Do the Architecture Decision Records align with roadmap decisions?
  2. **Documentation Philosophy**: Is the separation between architecture (target) and planning (current state) appropriate?
  3. **Implementation Gaps**: Are there gaps between architectural vision and implementation planning?

  ## SPECIFIC CONCERNS
  Please pay special attention to:
  - The multi-layer agent interface (Layer 1: Agent, Layer 2: Simple UI, Layer 3: Advanced UI)
  - The LLM-ontology integration using Gemini 2.5 Flash
  - The cross-modal orchestration complexity
  - The 2-week timeline given the architectural complexity
  - The risk-based testing strategy

  ## DELIVERABLES REQUIRED
  1. **Executive Summary** (2-3 paragraphs highlighting key findings)
  2. **Architectural Strengths and Weaknesses**
  3. **Roadmap Feasibility Assessment**
  4. **Critical Issues** (must-address problems)
  5. **Specific Recommendations** for improvements

  Be constructively critical. This is an academic project with real constraints, but architectural soundness and roadmap realism are crucial for success.

# Output configuration
output_format: "markdown"