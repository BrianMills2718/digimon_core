project_name: "T14 Email Parser Implementation Validation"

include_patterns:
  - "src/tools/phase1/t14_email_parser_unified.py"
  - "tests/unit/test_t14_email_parser_unified.py"

custom_prompt: |
  CRITICAL VALIDATION TASK: Verify T14 Email Parser implementation claims with specific evidence

  CLAIMS TO VALIDATE:

  **CLAIM 1**: T14 Email Parser implements unified BaseTool interface with comprehensive email processing
  - VERIFY: Class T14EmailParserUnified inherits from BaseTool (around line 34)
  - VERIFY: Implements execute, get_contract, health_check, cleanup methods
  - VERIFY: Uses real email module for parsing (import email at top)
  - VERIFY: Processes .eml and .msg files with real libraries

  **CLAIM 2**: Comprehensive mock-free test suite with 19 tests achieving 82% coverage
  - VERIFY: TestT14EmailParserUnifiedMockFree class exists with 19 test methods
  - VERIFY: Zero usage of mock, Mock, patch, MagicMock anywhere in test file
  - VERIFY: Tests use real email creation with tempfile.NamedTemporaryFile
  - VERIFY: Tests use actual email.mime.multipart.MIMEMultipart for email creation

  **CLAIM 3**: Real email processing with header decoding, attachment extraction, encoding detection
  - VERIFY: _extract_headers method uses email.header.decode_header (around line 275)
  - VERIFY: _extract_attachments method processes real attachments (around line 350)
  - VERIFY: Uses chardet.detect for encoding detection (import chardet)
  - VERIFY: _get_decoded_payload method handles encoding (around line 320)

  **CLAIM 4**: Formal error handling with ToolErrorCode enum and service integration
  - VERIFY: Uses ToolErrorCode enum values (not string literals) in error returns
  - VERIFY: _create_service_mentions method integrates with identity and provenance services
  - VERIFY: Performance tracking via _start_execution and _end_execution calls

  **CLAIM 5**: Test suite creates real email files and processes with actual libraries
  - VERIFY: _create_real_test_email_files method creates actual .eml files
  - VERIFY: Uses MIMEText, MIMEMultipart, MIMEBase for real email construction
  - VERIFY: Tests save files with tempfile.NamedTemporaryFile and process with email module
  - VERIFY: Tests verify actual email parsing results, not mocked responses

  VERIFICATION REQUIREMENTS:
  - Provide specific line numbers for each verified feature
  - Confirm zero mocking by absence of mock imports/usage
  - Verify real library usage vs simulated functionality
  - Check actual method implementations vs placeholder code

  REPORT FORMAT:
  For each claim, state: FULLY RESOLVED, PARTIALLY RESOLVED, or NOT RESOLVED with specific evidence

claims_of_success:
  - "T14 Email Parser implements unified BaseTool interface with comprehensive email processing using real email module"
  - "Test suite contains 19 mock-free tests achieving 82% coverage with zero mocking verified"
  - "Real email processing includes header decoding, attachment extraction, and encoding detection"
  - "Formal error handling uses ToolErrorCode enum with service integration for identity and provenance"
  - "Test suite creates real email files and processes them with actual email libraries"