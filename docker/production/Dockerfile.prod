FROM python:3.10-slim

# Set production environment
ENV GRAPHRAG_MODE=production
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .
COPY requirements_ui.txt .
COPY requirements_ui_testing.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements_ui.txt && \
    pip install --no-cache-dir -r requirements_ui_testing.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/examples

# Install the package
RUN pip install -e .

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash graphrag
RUN chown -R graphrag:graphrag /app
USER graphrag

# Expose ports
EXPOSE 8501 3333

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8501')" || exit 1

# Production startup script
COPY docker/production/start-production.sh /start-production.sh
USER root
RUN chmod +x /start-production.sh
USER graphrag

CMD ["/start-production.sh"]